# [START cloudbuild]
steps:
# This step runs the unit tests on the app
# - name: 'python:3.7-slim'
#   id: Test
#   entrypoint: /bin/sh
#   args:
#   - -c
#   - 'pip install flask && python test_app.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/freebail-frontend:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/freebail-frontend:$SHORT_SHA'


# [START cloudbuild-trigger-cd]
# This step clones the hello-cloudbuild-env repository
- name: 'gcr.io/cloud-builders/gcloud'
  id: Clone env repository
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    git clone git@github.com:jimbali/freebail-wedding-cd.git && \
    cd freebail-wedding-cd && \
    git checkout candidate && \
    git config user.email ${PROJECT_ID}@cloudbuild.gserviceaccount.com
# This step generates the new manifest
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" k8s/frontend/deployment.yaml.tpl | \
     sed "s/COMMIT_SHA/${SHORT_SHA}/g" > freebail-wedding-cd/k8s/frontend/deployment.yaml
# This step pushes the manifest back to hello-cloudbuild-env
- name: 'gcr.io/cloud-builders/gcloud'
  id: Push manifest
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
    set -x && \
    cd freebail-wedding-cd && \
    git add k8s/frontend/deployment.yaml && \
    git commit -m "Deploying image gcr.io/${PROJECT_ID}/freebail-frontend:${SHORT_SHA}
    Built from commit ${COMMIT_SHA} of repository freebail-frontend
    Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
    git push origin candidate
# [END cloudbuild-trigger-cd]
